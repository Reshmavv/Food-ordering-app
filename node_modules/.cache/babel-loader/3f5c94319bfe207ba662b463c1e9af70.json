{"ast":null,"code":"var _jsxFileName = \"D:\\\\deploy\\\\fudorderingapp\\\\src\\\\components\\\\Layout\\\\showOrders.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react'; // import Card from '../UI/Card';\n// import MealItem from './MealItem/MealItem';\n\nimport classes from './showOrders.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowOrders = props => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\n  const btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : ''}`;\n\n  const fetchOrderHandler = async () => {\n    const response = await fetch('https://food-ordering-app-700fa-default-rtdb.firebaseio.com/orders.json');\n\n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n\n    const responseData = await response.json();\n    const loadedOrders = [];\n\n    for (const key in responseData) {\n      loadedOrders.push({\n        id: key,\n        name: responseData[key].user.name,\n        city: responseData[key].user.city,\n        pin: responseData[key].user.pin,\n        pname: responseData[key].orderedItems[0].name\n      });\n    }\n\n    seOrder(loadedOrders);\n    setIsLoading(false);\n  };\n\n  fetchOrderHandler().catch(error => {\n    setIsLoading(false);\n    setHttpError(error.message);\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this);\n  }\n\n  const orderList = orders.map(orders => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classes['btn-list-order'],\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: btnClasses,\n        onClick: fetchOrderHandler,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Show orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShowOrders, \"nFFVsrFERRx5Pi48q8H8noOz/Ls=\");\n\n_c = ShowOrders;\nexport default ShowOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowOrders\");","map":{"version":3,"sources":["D:/deploy/fudorderingapp/src/components/Layout/showOrders.js"],"names":["useEffect","useState","classes","ShowOrders","props","orders","setOrders","isLoading","setIsLoading","httpError","setHttpError","btnIsHighlighted","setBtnIsHighlighted","btnClasses","button","bump","fetchOrderHandler","response","fetch","ok","Error","responseData","json","loadedOrders","key","push","id","name","user","city","pin","pname","orderedItems","seOrder","catch","error","message","MealsLoading","MealsError","orderList","map","meal","description","price"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\n// import Card from '../UI/Card';\r\n// import MealItem from './MealItem/MealItem';\r\nimport classes from './showOrders.module.css';\r\n\r\nconst ShowOrders = (props) => {\r\n    const [orders, setOrders] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState();\r\n    const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\r\n    const btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : ''}`\r\n  \r\n        const fetchOrderHandler= async ()=>{\r\n          const response = await fetch('https://food-ordering-app-700fa-default-rtdb.firebaseio.com/orders.json');\r\n    \r\n         if (!response.ok) {\r\n            throw new Error('Something went wrong!');\r\n          }\r\n    \r\n          const responseData = await response.json();\r\n    \r\n          const loadedOrders = [];\r\n    \r\n          for (const key in responseData) {\r\n            loadedOrders.push({\r\n              id: key,\r\n              name: responseData[key].user.name,\r\n              city: responseData[key].user.city,\r\n              pin: responseData[key].user.pin,\r\n\r\n              pname:responseData[key].orderedItems[0].name,\r\n              \r\n            });\r\n          }\r\n    \r\n          seOrder(loadedOrders);\r\n          setIsLoading(false);\r\n        };\r\n    \r\n        fetchOrderHandler().catch((error) => {\r\n          setIsLoading(false);\r\n          setHttpError(error.message);\r\n        });\r\n      \r\n    \r\n      if (isLoading) {\r\n        return (\r\n          <section className={classes.MealsLoading}>\r\n            <p>Loading...</p>\r\n          </section>\r\n        );\r\n      }\r\n    \r\n      if (httpError) {\r\n        return (\r\n          <section className={classes.MealsError}>\r\n            <p>{httpError}</p>\r\n          </section>\r\n        );\r\n      }\r\n    \r\n      const orderList = orders.map((orders) => (\r\n        <MealItem\r\n          key={meal.id}\r\n          id={meal.id}\r\n          name={meal.name}\r\n          description={meal.description}\r\n          price={meal.price}\r\n        />\r\n      ));\r\n    \r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n    <li className={classes['btn-list-order']}>\r\n<button className={btnClasses} onClick={fetchOrderHandler}>  \r\n<span>Show orders</span>\r\n</button>\r\n</li> \r\n</div>\r\n  );\r\n};\r\n\r\nexport default ShowOrders;\r\n"]},"metadata":{},"sourceType":"module"}