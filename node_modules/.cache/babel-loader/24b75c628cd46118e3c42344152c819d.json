{"ast":null,"code":"var _jsxFileName = \"D:\\\\deploy\\\\fudorderingapp\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\nimport cartSlice from '../../store/cart-slice';\nimport { cartActions } from '../../store/cart-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  //const [isCheckout, setIsCheckout] = useState(false);\n  //const [isSubmitting, setIsSubmitting] = useState(false);\n  // const [didSubmit, setDidSubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const dispatch = useDispatch();\n  const checkout = useSelector(state => state.cart.setIsCheckout);\n  const submitting = useSelector(state => state.cart.setIsSubmitting);\n  const didSubmit = useSelector(state => state.cart.setDidSubmit);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem(item);\n  };\n\n  const orderHandler = () => {\n    dispatch(cartActions.setIsCheckout()); // setIsCheckout(true);\n  };\n\n  const submitOrderHandler = async userData => {\n    dispatch(cartActions.setIsSubmitting());\n    await fetch('https://food-ordering-app-700fa-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    dispatch(cartActions.setIsSubmitting()); //setIsSubmitting(false);\n\n    dispatch(cartActions.setDidSubmit()); //setDidSubmit(true);\n\n    cartCtx.clearCart();\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), checkout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), !checkout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending order data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 36\n  }, this);\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Successfully sent the order!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [!submitting && !didSubmit && cartModalContent, submitting && isSubmittingModalContent, !submitting && didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"z9gT4tykaJ4IN89eUSF+7bGlVAU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/deploy/fudorderingapp/src/components/Cart/Cart.js"],"names":["useSelector","useDispatch","Modal","CartItem","classes","CartContext","Checkout","cartSlice","cartActions","Cart","props","cartCtx","useContext","dispatch","checkout","state","cart","setIsCheckout","submitting","setIsSubmitting","didSubmit","setDidSubmit","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","orderHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","clearCart","cartItems","map","name","amount","price","bind","modalActions","actions","onClose","button","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent"],"mappings":"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","sourcesContent":["\nimport {useSelector,useDispatch } from 'react-redux';\n\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\nimport cartSlice from '../../store/cart-slice';\nimport {cartActions} from '../../store/cart-slice';\n\nconst Cart = (props) => {\n  //const [isCheckout, setIsCheckout] = useState(false);\n  //const [isSubmitting, setIsSubmitting] = useState(false);\n // const [didSubmit, setDidSubmit] = useState(false);\n   const cartCtx = useContext(CartContext);\n\n   const dispatch=useDispatch();\n\n  const checkout=useSelector((state)=>state.cart.setIsCheckout);\n  const submitting=useSelector((state)=>state.cart.setIsSubmitting);\n  const didSubmit=useSelector((state)=>state.cart.setDidSubmit);\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = (item) => {\n    cartCtx.addItem(item);\n  };\n\n  const orderHandler = () => {\n    dispatch(cartActions.setIsCheckout());\n   // setIsCheckout(true);\n  };\n\n  const submitOrderHandler = async (userData) => {\n    dispatch(cartActions.setIsSubmitting());\n    await fetch('https://food-ordering-app-700fa-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items,\n      }),\n    });\n    dispatch(cartActions.setIsSubmitting());//setIsSubmitting(false);\n    dispatch(cartActions.setDidSubmit());//setDidSubmit(true);\n    cartCtx.clearCart();\n  };\n\n  const cartItems = (\n    <ul className={classes['cart-items']}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n\n  const modalActions = (\n    <div className={classes.actions}>\n      <button className={classes['button--alt']} onClick={props.onClose}>\n        Close\n      </button>\n      {hasItems && (\n        <button className={classes.button} onClick={orderHandler}>\n          Order\n        </button>\n      )}\n    </div>\n  );\n\n  const cartModalContent = (\n    <React.Fragment>\n      {cartItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{totalAmount}</span>\n      </div>\n      {checkout && (\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\n      )}\n      {!checkout && modalActions}\n    </React.Fragment>\n  );\n\n  const isSubmittingModalContent = <p>Sending order data...</p>;\n\n  const didSubmitModalContent = (\n    <React.Fragment>\n      <p>Successfully sent the order!</p>\n      <div className={classes.actions}>\n      <button className={classes.button} onClick={props.onClose}>\n        Close\n      </button>\n    </div>\n    </React.Fragment>\n  );\n\n  return (\n    <Modal onClose={props.onClose}>\n      {!submitting && !didSubmit && cartModalContent}\n      {submitting && isSubmittingModalContent}\n      {!submitting && didSubmit && didSubmitModalContent}\n    </Modal>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}