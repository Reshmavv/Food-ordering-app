{"ast":null,"code":"var _jsxFileName = \"D:\\\\deploy\\\\fudorderingapp\\\\src\\\\components\\\\Layout\\\\HeaderCartButton.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport CartIcon from '../Cart/CartIcon';\nimport CartContext from '../../store/cart-context';\nimport classes from './HeaderCartButton.module.css';\nimport OrdersButton from './OrdersButton';\nimport { ShowOrders } from '../../store/order-actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { orderActions } from '../../store/order-slice';\nimport orderSlice from '../../store/order-slice';\nimport { orderListActions } from '../../store/orderlist-slice';\nimport orderListSlice from '../../store/orderlist-slice';\nimport OrderModal from '../UI/OrderModal';\nimport { orderModalActions } from '../../store/orderModalSlice';\nimport orderModalSlice from '../../store/orderModalSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeaderCartButton = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const initial = useSelector(state => state.order.Initial); //const orderData=useSelector((state)=>state.order.orders);\n\n  const orderlist = useSelector(state => state.orderlist.orders);\n  const showmodal = useSelector(state => state.ordermodal.showModal);\n  const closemodal = useSelector(state => state.ordermodal.closeModal);\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  let isInitial = true;\n  const {\n    items\n  } = cartCtx;\n  const numberOfCartItems = items.reduce((curNumber, item) => {\n    return curNumber + item.amount;\n  }, 0);\n  const btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : ''}`;\n  useEffect(() => {\n    if (items.length === 0) {\n      return;\n    }\n\n    setBtnIsHighlighted(true);\n    const timer = setTimeout(() => {\n      setBtnIsHighlighted(false);\n    }, 300);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [items]); //showing previous orders\n\n  let id;\n\n  const showOrderHandler = () => {\n    dispatch(orderModalActions.setShowModal());\n    dispatch(orderModalActions.setCloseModal()); //console.log(orderlist);\n    // const key=orderlist.map((data)=>(\n    // ));\n    // for (const key in orderData){\n    //   orderList.push({\n    //                      id: key,\n    //                      name: orderData[key].user.name,\n    //                      city: orderData[key].user.city,\n    //                      pin: orderData[key].user.postalCode,\n    //                      orderedItem:orderData[key].orderedItems.map((data)=>{\n    //                       amount=data.amount;\n    //                       itemname=data.name;\n    //                       price=data.price;\n    //                      }\n    //                       ),\n    //                     // pname:orderData[key].orderedItem[0].name,\n    //                     // price:orderData[key].orderedItem[0].price,\n    //                    });\n    //                    console.log(orderList);\n    //                    console.log(orderlist[id]);\n    // }\n    // dispatch(orderActions.orderList({name:orderList.name}));\n    //dispatch(orderActions.setInitial());\n  };\n\n  useEffect(() => {\n    dispatch(ShowOrders());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes['btn-list'],\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes['btn-list-order'],\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: btnClasses,\n          onClick: props.onClick,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.icon,\n            children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Your Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.badge,\n            children: numberOfCartItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes['btn-list-order'],\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: btnClasses,\n          onClick: showOrderHandler,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Show Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), showmodal && !closemodal && /*#__PURE__*/_jsxDEV(OrderModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeaderCartButton, \"lApMbil9bUKDbNSetgYVByT+i6E=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = HeaderCartButton;\nexport default HeaderCartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"sources":["D:/deploy/fudorderingapp/src/components/Layout/HeaderCartButton.js"],"names":["useContext","useEffect","useState","CartIcon","CartContext","classes","OrdersButton","ShowOrders","useDispatch","useSelector","orderActions","orderSlice","orderListActions","orderListSlice","OrderModal","orderModalActions","orderModalSlice","HeaderCartButton","props","dispatch","initial","state","order","Initial","orderlist","orders","showmodal","ordermodal","showModal","closemodal","closeModal","btnIsHighlighted","setBtnIsHighlighted","cartCtx","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","isInitial","items","numberOfCartItems","reduce","curNumber","item","amount","btnClasses","button","bump","length","timer","setTimeout","clearTimeout","id","showOrderHandler","setShowModal","setCloseModal","onClick","icon","badge"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\n\nimport CartIcon from '../Cart/CartIcon';\nimport CartContext from '../../store/cart-context';\nimport classes from './HeaderCartButton.module.css';\nimport OrdersButton from './OrdersButton';\nimport {ShowOrders} from '../../store/order-actions';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {orderActions} from '../../store/order-slice';\nimport orderSlice from '../../store/order-slice';\n\nimport {orderListActions} from '../../store/orderlist-slice';\nimport orderListSlice from '../../store/orderlist-slice';\nimport OrderModal from '../UI/OrderModal';\nimport {orderModalActions} from '../../store/orderModalSlice';\nimport orderModalSlice from '../../store/orderModalSlice';\n\nconst HeaderCartButton = (props) => {\n  const dispatch=useDispatch();\n  const initial=useSelector((state)=>state.order.Initial);\n  //const orderData=useSelector((state)=>state.order.orders);\n\n  const orderlist=useSelector((state)=>state.orderlist.orders);\n  const showmodal=useSelector((state)=>state.ordermodal.showModal);\n  const closemodal=useSelector((state)=>state.ordermodal.closeModal);\n\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\n  const cartCtx = useContext(CartContext);\n\n  const [meals, setMeals] = useState([]);\nconst [isLoading, setIsLoading] = useState(true);\nconst [httpError, setHttpError] = useState();\n\nlet isInitial=true;\n\n\n  const { items } = cartCtx;\n\n  const numberOfCartItems = items.reduce((curNumber, item) => {\n    return curNumber + item.amount;\n  }, 0);\n\n  const btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : ''}`;\n\n  useEffect(() => {\n    if (items.length === 0) {\n      return;\n    }\n    setBtnIsHighlighted(true);\n\n    const timer = setTimeout(() => {\n      setBtnIsHighlighted(false);\n    }, 300);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [items]);\n\n  \n\n\n\n//showing previous orders\n\n\nlet id;\n\nconst showOrderHandler=()=>{\n\n\n  dispatch(orderModalActions.setShowModal());\n  dispatch(orderModalActions.setCloseModal());\n  //console.log(orderlist);\n\n  // const key=orderlist.map((data)=>(\n \n  // ));\n  \n\n  // for (const key in orderData){\n  //   orderList.push({\n  //                      id: key,\n  //                      name: orderData[key].user.name,\n  //                      city: orderData[key].user.city,\n  //                      pin: orderData[key].user.postalCode,\n  //                      orderedItem:orderData[key].orderedItems.map((data)=>{\n  //                       amount=data.amount;\n  //                       itemname=data.name;\n  //                       price=data.price;\n  //                      }\n                    \n                       \n\n  //                       ),\n                          \n                        \n  //                     // pname:orderData[key].orderedItem[0].name,\n  //                     // price:orderData[key].orderedItem[0].price,\n  //                    });\n                  \n  //                    console.log(orderList);\n  //                    console.log(orderlist[id]);\n                     \n                     \n  // }\n \n  // dispatch(orderActions.orderList({name:orderList.name}));\n  \n //dispatch(orderActions.setInitial());\n};\nuseEffect(()=>{\n \n  dispatch(ShowOrders());\n},[dispatch]);\n\n\n  return (\n    <div>\n      <ul className={classes['btn-list']}>\n      \n        <li className={classes['btn-list-order']}>\n    <button className={btnClasses} onClick={props.onClick}>\n      <span className={classes.icon}>\n        <CartIcon />\n      </span>\n      <span>Your Cart</span>\n      <span className={classes.badge}>{numberOfCartItems}</span>\n    </button></li>\n    \n    <li className={classes['btn-list-order']}>\n    <button className={btnClasses} onClick={showOrderHandler} >\n      \n      <span>Show Orders</span>\n      \n    </button></li>\n    \n\n\n   </ul>\n  \n   {showmodal && !closemodal && <OrderModal/>}\n   </div>\n   \n   \n  );\n};\n\nexport default HeaderCartButton;\n"]},"metadata":{},"sourceType":"module"}