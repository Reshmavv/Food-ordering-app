{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst orderSlice = createSlice({\n  name: 'order',\n  initialState: {\n    showOrder: false,\n    isLoading: true,\n    httpError: '',\n    orders: '[]'\n  },\n  reducers: {\n    showAllOrders(state) {\n      state.showOrder = !state.showOrder;\n    },\n\n    setIsLoading(state) {\n      state.isLoading = !state.isLoading;\n    },\n\n    setHttpError(state, action) {\n      state.httpError = action.payload;\n    },\n\n    setOrder(state, action) {\n      state.orders = action.payload;\n    }\n\n  }\n});\nexport const orderActions = orderSlice.actions;\nexport default orderSlice;","map":{"version":3,"sources":["D:/deploy/fudorderingapp/src/store/order-slice.js"],"names":["createSlice","orderSlice","name","initialState","showOrder","isLoading","httpError","orders","reducers","showAllOrders","state","setIsLoading","setHttpError","action","payload","setOrder","orderActions","actions"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,UAAU,GAACD,WAAW,CAAC;AACzBE,EAAAA,IAAI,EAAC,OADoB;AAEzBC,EAAAA,YAAY,EAAC;AAACC,IAAAA,SAAS,EAAC,KAAX;AAAiBC,IAAAA,SAAS,EAAC,IAA3B;AAAgCC,IAAAA,SAAS,EAAC,EAA1C;AAA6CC,IAAAA,MAAM,EAAC;AAApD,GAFY;AAGzBC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,aAAa,CAACC,KAAD,EAAO;AAChBA,MAAAA,KAAK,CAACN,SAAN,GAAgB,CAACM,KAAK,CAACN,SAAvB;AACH,KAHI;;AAILO,IAAAA,YAAY,CAACD,KAAD,EAAO;AACfA,MAAAA,KAAK,CAACL,SAAN,GAAgB,CAACK,KAAK,CAACL,SAAvB;AAEH,KAPI;;AAQLO,IAAAA,YAAY,CAACF,KAAD,EAAOG,MAAP,EAAc;AACtBH,MAAAA,KAAK,CAACJ,SAAN,GAAgBO,MAAM,CAACC,OAAvB;AAEH,KAXI;;AAYLC,IAAAA,QAAQ,CAACL,KAAD,EAAOG,MAAP,EAAc;AAClBH,MAAAA,KAAK,CAACH,MAAN,GAAaM,MAAM,CAACC,OAApB;AACH;;AAdI;AAHgB,CAAD,CAA5B;AA8BA,OAAO,MAAME,YAAY,GAACf,UAAU,CAACgB,OAA9B;AAEP,eAAehB,UAAf","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst orderSlice=createSlice({\r\n    name:'order',\r\n    initialState:{showOrder:false,isLoading:true,httpError:'',orders:'[]'},\r\n    reducers:{\r\n        showAllOrders(state){\r\n            state.showOrder=!state.showOrder;\r\n        },\r\n        setIsLoading(state){\r\n            state.isLoading=!state.isLoading;\r\n\r\n        },\r\n        setHttpError(state,action){\r\n            state.httpError=action.payload;\r\n\r\n        },\r\n        setOrder(state,action){\r\n            state.orders=action.payload;\r\n        }\r\n    }\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const orderActions=orderSlice.actions;\r\n\r\nexport default orderSlice;"]},"metadata":{},"sourceType":"module"}