{"ast":null,"code":"var _jsxFileName = \"D:\\\\deploy\\\\fudorderingapp\\\\src\\\\components\\\\Layout\\\\showOrders.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react'; // import Card from '../UI/Card';\n// import MealItem from './MealItem/MealItem';\n\nimport classes from './showOrders.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowOrders = props => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\n  const btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : ''}`;\n  useEffect(() => {\n    fetchOrderHandler;\n  }, []);\n\n  const fetchOrderHandler = async () => {\n    const response = await fetch('https://food-ordering-app-700fa-default-rtdb.firebaseio.com/orders.json');\n\n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n\n    const responseData = await response.json();\n    const loadedOrders = [];\n\n    for (const key in responseData) {\n      loadedOrders.push({\n        id: key,\n        name: responseData[key].user.name,\n        city: responseData[key].user.city,\n        pin: responseData[key].user.pin,\n        pname: responseData[key].orderedItems[0].name,\n        price: responseData[key].orderedItems[0].price\n      });\n    }\n\n    console.log(loadedOrders);\n    setOrders(loadedOrders);\n    setIsLoading(false);\n  };\n\n  fetchOrderHandler().catch(error => {\n    setIsLoading(false);\n    setHttpError(error.message);\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this);\n  } //   const orderList = orders.map((orders) => (\n  //     <MealItem\n  //       key={meal.id}\n  //       id={meal.id}\n  //       name={meal.name}\n  //       description={meal.description}\n  //       price={meal.price}\n  //     />\n  //   ));\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classes['btn-list-order'],\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: btnClasses,\n        onClick: fetchOrderHandler,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Show orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShowOrders, \"qKWQGNas+96BYaYC8KT6d1sxuAc=\");\n\n_c = ShowOrders;\nexport default ShowOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowOrders\");","map":{"version":3,"sources":["D:/deploy/fudorderingapp/src/components/Layout/showOrders.js"],"names":["useEffect","useState","classes","ShowOrders","props","orders","setOrders","isLoading","setIsLoading","httpError","setHttpError","btnIsHighlighted","setBtnIsHighlighted","btnClasses","button","bump","fetchOrderHandler","response","fetch","ok","Error","responseData","json","loadedOrders","key","push","id","name","user","city","pin","pname","orderedItems","price","console","log","catch","error","message","MealsLoading","MealsError"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\n// import Card from '../UI/Card';\r\n// import MealItem from './MealItem/MealItem';\r\nimport classes from './showOrders.module.css';\r\n\r\nconst ShowOrders = (props) => {\r\n    const [orders, setOrders] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState();\r\n    const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\r\n    const btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : ''}`\r\n\r\n    useEffect(()=>{\r\n        fetchOrderHandler;\r\n\r\n    },[]);\r\n    const fetchOrderHandler= async ()=>{\r\n        const response = await fetch('https://food-ordering-app-700fa-default-rtdb.firebaseio.com/orders.json');\r\n  \r\n       if (!response.ok) {\r\n          throw new Error('Something went wrong!');\r\n        }\r\n  \r\n        const responseData = await response.json();\r\n  \r\n        const loadedOrders = [];\r\n  \r\n        for (const key in responseData) {\r\n          loadedOrders.push({\r\n            id: key,\r\n            name: responseData[key].user.name,\r\n            city: responseData[key].user.city,\r\n            pin: responseData[key].user.pin,\r\n\r\n            pname:responseData[key].orderedItems[0].name,\r\n            price:responseData[key].orderedItems[0].price,\r\n          });\r\n        }\r\n  console.log(loadedOrders);\r\n        setOrders(loadedOrders);\r\n        setIsLoading(false);\r\n      };\r\n  \r\n      fetchOrderHandler().catch((error) => {\r\n        setIsLoading(false);\r\n        setHttpError(error.message);\r\n      });\r\n    \r\n  \r\n    if (isLoading) {\r\n      return (\r\n        <section className={classes.MealsLoading}>\r\n          <p>Loading...</p>\r\n        </section>\r\n      );\r\n    }\r\n  \r\n    if (httpError) {\r\n      return (\r\n        <section className={classes.MealsError}>\r\n          <p>{httpError}</p>\r\n        </section>\r\n      );\r\n    }\r\n  \r\n        \r\n    \r\n    //   const orderList = orders.map((orders) => (\r\n    //     <MealItem\r\n    //       key={meal.id}\r\n    //       id={meal.id}\r\n    //       name={meal.name}\r\n    //       description={meal.description}\r\n    //       price={meal.price}\r\n    //     />\r\n    //   ));\r\n    \r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n    <li className={classes['btn-list-order']}>\r\n<button className={btnClasses} onClick={fetchOrderHandler}>  \r\n<span>Show orders</span>\r\n</button>\r\n</li> \r\n</div>\r\n  );\r\n};\r\n\r\nexport default ShowOrders;\r\n"]},"metadata":{},"sourceType":"module"}