{"ast":null,"code":"var _jsxFileName = \"D:\\\\deploy\\\\fudorderingapp\\\\src\\\\store\\\\order-actions.js\",\n    _s = $RefreshSig$();\n\nimport uiActions from './ui-slice';\nimport cartActions from './cart-slice';\nimport { orderActions } from './order-slice';\nimport { useSelector } from 'react-redux';\nimport classes from '../components/Meals/AvailableMeals.module.css';\nimport orderSlice from './order-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShowOrders = () => {\n  _s();\n\n  const loading = useSelector(state => state.order.isLoading);\n  const httperror = useSelector(state => state.order.httpError);\n  const initial = useSelector(state => state.order.Initial);\n\n  if (initial) {\n    return async dispatch => {\n      const fetchOrders = async () => {\n        const response = await fetch('https://food-ordering-app-700fa-default-rtdb.firebaseio.com/orders.json');\n\n        if (!response.ok) {\n          throw new Error('Something went wrong!');\n        }\n\n        const responseData = await response.json();\n        const loadedOrder = [];\n\n        for (const key in responseData) {\n          loadedOrder.push({\n            id: key,\n            name: responseData[key].user.name,\n            city: responseData[key].usercity,\n            pin: responseData[key].user.pin,\n            pname: responseData[key].orderedItem[0].name,\n            price: responseData[key].orderedItem[0].price\n          });\n          console.log(responseData[key].user.pin);\n        }\n\n        console.log(loadedOrder);\n        dispatch(orderActions.showOrders(loadedOrder)); //setMeals(loadedMeals);\n\n        dispatch(orderActions.setIsLoading()); //setIsLoading(false);\n      };\n\n      fetchOrders().catch(error => {\n        dispatch(orderActions.setIsLoading()); // setIsLoading(false);\n\n        dispatch(orderActions.setHttpError(error.message)); //setHttpError(error.message);\n      });\n\n      if (loading) {\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          className: classes.MealsLoading,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      }\n\n      if (httperror) {\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          className: classes.MealsError,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: httperror\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      }\n    };\n  }\n\n  ;\n};\n\n_s(ShowOrders, \"7b+cxNC5aN3oOF2xLLoGMhyoKX0=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = ShowOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowOrders\");","map":{"version":3,"sources":["D:/deploy/fudorderingapp/src/store/order-actions.js"],"names":["uiActions","cartActions","orderActions","useSelector","classes","orderSlice","ShowOrders","loading","state","order","isLoading","httperror","httpError","initial","Initial","dispatch","fetchOrders","response","fetch","ok","Error","responseData","json","loadedOrder","key","push","id","name","user","city","usercity","pin","pname","orderedItem","price","console","log","showOrders","setIsLoading","catch","error","setHttpError","message","MealsLoading","MealsError"],"mappings":"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","sourcesContent":["import uiActions from './ui-slice';\r\nimport cartActions from './cart-slice';\r\nimport {orderActions} from './order-slice';\r\nimport {useSelector} from 'react-redux';\r\nimport classes from '../components/Meals/AvailableMeals.module.css';\r\nimport orderSlice from './order-slice';\r\n\r\nexport const ShowOrders=()=>{\r\n    const loading= useSelector((state)=>state.order.isLoading);\r\n    const httperror=useSelector((state)=>state.order.httpError);\r\n    const initial=useSelector((state)=>state.order.Initial);\r\n\r\n\r\nif(initial){\r\n    return async(dispatch)=>{\r\n        const fetchOrders=async()=>{\r\n            const response = await fetch('https://food-ordering-app-700fa-default-rtdb.firebaseio.com/orders.json');\r\n\r\n            if (!response.ok) {\r\n               throw new Error('Something went wrong!');\r\n             }\r\n       \r\n             const responseData = await response.json();\r\n       \r\n             const loadedOrder = [];\r\n       \r\n             for (const key in responseData) {\r\n               loadedOrder.push({\r\n                 id: key,\r\n                 name: responseData[key].user.name,\r\n                 city: responseData[key].usercity,\r\n                 pin: responseData[key].user.pin,\r\n                 pname:responseData[key].orderedItem[0].name,\r\n                 price:responseData[key].orderedItem[0].price,\r\n               });\r\n               console.log( responseData[key].user.pin);\r\n             }\r\n       console.log(loadedOrder);\r\n             dispatch(orderActions.showOrders(loadedOrder));//setMeals(loadedMeals);\r\n             dispatch(orderActions.setIsLoading());//setIsLoading(false);\r\n           };\r\n           fetchOrders().catch((error) => {\r\n            dispatch(orderActions.setIsLoading());// setIsLoading(false);\r\n            dispatch(orderActions.setHttpError(error.message));//setHttpError(error.message);\r\n          });\r\n        \r\n      \r\n        if (loading) {\r\n          return (\r\n            <section className={classes.MealsLoading}>\r\n              <p>Loading...</p>\r\n            </section>\r\n          );\r\n        }\r\n      \r\n        if (httperror) {\r\n          return (\r\n            <section className={classes.MealsError}>\r\n              <p>{httperror}</p>\r\n            </section>\r\n          );\r\n        }\r\n       \r\n        };\r\n    };\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}